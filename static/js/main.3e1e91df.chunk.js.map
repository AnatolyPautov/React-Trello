{"version":3,"sources":["context.ts","components/popupUserName/PopupName.tsx","assets/icons/closeCross.svg","store/trelloSlice.ts","components/comment/Comment.tsx","components/modal/CardModal.tsx","assets/icons/comment.svg","store/store.ts","components/card/CardItem.tsx","components/column/Column.tsx","components/board/Board.tsx","globalstyles.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["contextDefaultValues","userName","setUserName","Context","React","createContext","PopupContainer","styled","div","PopupInput","input","PopupBtn","button","PopupName","setJoined","useState","name","setName","useContext","ThemeContext","type","placeholder","onChange","e","target","value","onClick","trelloSlice","createSlice","initialState","columns","id","title","newTextCard","cards","comments","reducers","setColumnTitle","state","payload","newTitle","map","column","event","addCard","newCard","Math","random","toString","substring","description","columnId","newTextComment","author","push","updateNewCard","removeCard","filter","card","onChangeCard","changedCard","filedName","addComment","newComment","text","cardId","updateNewComment","removeComment","comment","onChangeComment","changedComments","actions","Container","FirstNameLetter","Text","p","TextEditableContainer","TextEditable","textarea","DeleteBtn","ChangeBtn","Comment","commentActive","setCommentActive","textRef","useRef","dispatch","useDispatch","ref","changeComment","current","style","height","scrollHeight","Background","ModalWrapper","Modal","Close–°ross","TitleInput","TitleDesc","DescTextArea","CommentArea","CardModal","props","onCloseModal","key","setModalActive","useEffect","document","addEventListener","stopPropagation","src","closeCross","onKeyPress","slice","reverse","persistConfig","storage","persistedReducer","persistReducer","store","configureStore","reducer","getColumns","getCards","getComments","Card","CardDesc","IconContainer","CardItem","modalActive","useSelector","curComments","length","commentIcon","ColumnContainer","CardsWrapper","AreaInput","ButtonContainer","Button","ButtonActive","CloseAreaInput","Column","areaInputActive","setAreaInputActive","undefined","BoardContainer","Profile","CurrentUserName","ButtunExit","Board","GlobalStyle","createGlobalStyle","Wrapper","App","joined","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","persistor","persistStore","Main","Provider","StrictMode","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3e1e91df.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ninterface AppContextInterface {\r\n  userName: string;\r\n  setUserName(name: string): void;\r\n}\r\n\r\nconst contextDefaultValues: AppContextInterface = {\r\n  userName: '',\r\n  setUserName: () => {},\r\n};\r\nconst Context = React.createContext<AppContextInterface>(contextDefaultValues);\r\n\r\nexport default Context;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ThemeContext from '../../context';\r\n\r\ninterface PopupNameProps {\r\n  setJoined(e: boolean): void;\r\n}\r\n\r\nconst PopupName: React.FC<PopupNameProps> = ({ setJoined }) => {\r\n  const [name, setName] = React.useState<string>('');\r\n\r\n  const { setUserName } = React.useContext(ThemeContext);\r\n\r\n  const onAddName = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const onSaveName = () => {\r\n    if (name) {\r\n      setUserName(name);\r\n      setJoined(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PopupContainer>\r\n      <PopupInput type=\"text\" placeholder=\"–í–≤–µ–¥–∏—Ç–µ –∏–º—è\" onChange={onAddName} />\r\n      <PopupBtn onClick={onSaveName}>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</PopupBtn>\r\n    </PopupContainer>\r\n  );\r\n};\r\n\r\nconst PopupContainer = styled.div`\r\n  position: absolute;\r\n  content: '';\r\n  top: 20%;\r\n  left: 50%;\r\n  transform: translate(-50%);\r\n  width: 350px;\r\n  height: 250px;\r\n  background-color: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-radius: 5px;\r\n`;\r\nconst PopupInput = styled.input`\r\n  margin: 50px auto 30px;\r\n  width: 250px;\r\n  padding: 12px 0;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 3px;\r\n  font-size: 20px;\r\n  text-align: center;\r\n  border: 2px solid #5c3bfe;\r\n`;\r\nconst PopupBtn = styled.button`\r\n  margin: 10px auto 0;\r\n  width: 250px;\r\n  padding: 12px 0;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 3px;\r\n  font-size: 20px;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  background-color: #5c3bfe;\r\n  color: white;\r\n  transition: 0.3s;\r\n  &: hover {\r\n    background-color: #2a4ab3;\r\n  }\r\n`;\r\n\r\nexport default PopupName;\r\n","export default __webpack_public_path__ + \"static/media/closeCross.64f313cb.svg\";","import { createSlice } from '@reduxjs/toolkit';\r\nimport * as Types from '../types/types';\r\n\r\ninterface CardsSliceState {\r\n  columns: Types.Column[];\r\n  cards: Types.Card[];\r\n  comments: Types.Comment[];\r\n}\r\n\r\nconst initialState: CardsSliceState = {\r\n  columns: [\r\n    { id: 0, title: 'TO DO', newTextCard: '' },\r\n    { id: 1, title: 'In Progress', newTextCard: '' },\r\n    { id: 2, title: 'Testing', newTextCard: '' },\r\n    { id: 3, title: 'Done', newTextCard: '' },\r\n  ],\r\n  cards: [],\r\n  comments: [],\r\n};\r\n\r\nexport const trelloSlice = createSlice({\r\n  name: 'trello',\r\n  initialState,\r\n  reducers: {\r\n    setColumnTitle(state, { payload }) {\r\n      const newTitle = state.columns.map((column) => {\r\n        if (column.id === payload.id)\r\n          return { ...column, title: payload.event };\r\n        return column;\r\n      });\r\n      state.columns = newTitle;\r\n    },\r\n    addCard(state, { payload }) {\r\n      const newCard = {\r\n        id: Math.random().toString(36).substring(2, 9),\r\n        title: payload.newTextCard,\r\n        description: '',\r\n        columnId: payload.columnId,\r\n        newTextComment: '',\r\n        author: payload.author,\r\n      };\r\n      state.cards.push(newCard);\r\n      state.columns[payload.columnId].newTextCard = '';\r\n    },\r\n    updateNewCard(state, { payload }) {\r\n      state.columns[payload.id].newTextCard = payload.event;\r\n    },\r\n    removeCard(state, { payload }) {\r\n      state.cards = [\r\n        ...state.cards.filter((card: Types.Card) => card.id !== payload),\r\n      ];\r\n    },\r\n    onChangeCard(state, { payload }) {\r\n      const changedCard = state.cards.map((card) => {\r\n        if (card.id === payload.id)\r\n          return { ...card, [payload.filedName]: payload.event };\r\n        return card;\r\n      });\r\n      state.cards = changedCard;\r\n    },\r\n    addComment(state, { payload }) {\r\n      const newComment = {\r\n        id: Math.random().toString(36).substring(2, 9),\r\n        text: payload.newTextComment,\r\n        cardId: payload.cardId,\r\n        author: payload.author,\r\n      };\r\n      state.comments.push(newComment);\r\n      state.cards.map((card) => {\r\n        if (card.id === payload.cardId) {\r\n          card.newTextComment = '';\r\n        }\r\n      });\r\n    },\r\n    updateNewComment(state, { payload }) {\r\n      state.cards.map((card) => {\r\n        if (card.id === payload.cardId) {\r\n          card.newTextComment = payload.newTextComment;\r\n        }\r\n      });\r\n    },\r\n    removeComment(state, { payload }) {\r\n      state.comments = [\r\n        ...state.comments.filter(\r\n          (comment: Types.Comment) => comment.id !== payload\r\n        ),\r\n      ];\r\n    },\r\n    onChangeComment(state, { payload }) {\r\n      const changedComments = state.comments.map((comment) => {\r\n        if (comment.id === payload.id)\r\n          return { ...comment, text: payload.text };\r\n        return comment;\r\n      });\r\n      state.comments = changedComments;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setColumnTitle,\r\n  addCard,\r\n  updateNewCard,\r\n  removeCard,\r\n  onChangeCard,\r\n  addComment,\r\n  updateNewComment,\r\n  removeComment,\r\n  onChangeComment,\r\n} = trelloSlice.actions;\r\n\r\nexport default trelloSlice.reducer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport * as Types from '../../types/types';\r\nimport { removeComment, onChangeComment } from '../../store/trelloSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport Context from '../../context';\r\n\r\ninterface CommentProps {\r\n  comment: Types.Comment;\r\n}\r\nconst Comment: React.FC<CommentProps> = ({ comment }) => {\r\n  const [commentActive, setCommentActive] = React.useState<boolean>(false);\r\n\r\n  const textRef = React.useRef<any>();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { userName } = React.useContext(Context);\r\n\r\n  const changeComment = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    if (userName === comment.author || userName === 'admin') {\r\n      dispatch(onChangeComment({ text: e.target.value, id: comment.id }));\r\n    }\r\n  };\r\n  return (\r\n    <Container>\r\n      <FirstNameLetter>\r\n        <div>{comment.author[0]}</div>\r\n      </FirstNameLetter>\r\n      <div>\r\n        <div>{comment.author}</div>\r\n        {!commentActive ? (\r\n          <div>\r\n            <Text>{comment.text}</Text>\r\n            {(userName === comment.author || userName === 'admin') && (\r\n              <div>\r\n                <ChangeBtn onClick={() => setCommentActive(true)}>\r\n                  –ò–∑–º–µ–Ω–∏—Ç—å\r\n                </ChangeBtn>\r\n                <DeleteBtn onClick={() => dispatch(removeComment(comment.id))}>\r\n                  –£–¥–∞–ª–∏—Ç—å\r\n                </DeleteBtn>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <TextEditableContainer>\r\n            <TextEditable\r\n              ref={textRef}\r\n              value={comment.text}\r\n              onChange={(e) => {\r\n                changeComment(e);\r\n                textRef.current.style.height = '0px';\r\n                textRef.current.style.height = `${textRef.current.scrollHeight}px`;\r\n              }}\r\n            />\r\n            <button onClick={() => setCommentActive(false)}>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>\r\n          </TextEditableContainer>\r\n        )}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  margin-bottom: 10px;\r\n`;\r\nconst FirstNameLetter = styled.div`\r\n  flex-shrink: 0;\r\n  background-color: rgba(0, 0, 0, 0.15);\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-right: 5px;\r\n  line-height: 0;\r\n  cursor: default;\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.3);\r\n  }\r\n`;\r\nconst Text = styled.p`\r\n  margin-top: 5px;\r\n  background-color: white;\r\n  border-radius: 5px;\r\n  padding: 7px 10px;\r\n  box-shadow: 0 1px 0 rgb(9 30 66 / 25%);\r\n  outline: none;\r\n  border: none;\r\n  word-break: break-all;\r\n`;\r\nconst TextEditableContainer = styled.div`\r\n  width: 100%;\r\n  margin-top: 5px;\r\n  background-color: white;\r\n  border-radius: 5px;\r\n  padding: 7px 10px;\r\n  box-shadow: 0 1px 0 rgb(9 30 66 / 25%);\r\n  outline: none;\r\n  border: none;\r\n`;\r\nconst TextEditable = styled.textarea`\r\n  width: 100%;\r\n  display: block;\r\n  border: none;\r\n  outline: none;\r\n  resize: none;\r\n`;\r\nconst DeleteBtn = styled.button`\r\n  outline: none;\r\n  border: none;\r\n  color: #5e6c84;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: #262930;\r\n  }\r\n`;\r\nconst ChangeBtn = styled.button`\r\n  outline: none;\r\n  border: none;\r\n  color: #5e6c84;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: #262930;\r\n  }\r\n`;\r\n\r\nexport default Comment;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Context from '../../context';\r\nimport { ReactSVG } from 'react-svg';\r\nimport closeCross from './../../assets/icons/closeCross.svg';\r\nimport * as Types from '../../types/types';\r\nimport Comment from './../comment/Comment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  addComment,\r\n  updateNewComment,\r\n  onChangeCard,\r\n} from '../../store/trelloSlice';\r\n\r\ninterface ModalProps {\r\n  comments: Types.Comment[];\r\n  column: Types.Column;\r\n  card: Types.Card;\r\n  setModalActive(active: boolean): void;\r\n}\r\nconst CardModal: React.FC<ModalProps> = (props) => {\r\n  const textRef = React.useRef<any>();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { userName } = React.useContext(Context);\r\n\r\n  const onCloseModal = ({ key }: KeyboardEvent) => {\r\n    if (key === 'Escape') {\r\n      props.setModalActive(false);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    document.addEventListener('keydown', onCloseModal);\r\n  });\r\n\r\n  const keyPressHandler = (\r\n    event: React.KeyboardEvent,\r\n    newTextComment: string,\r\n    cardId: string\r\n  ) => {\r\n    if (event.key === 'Enter' && newTextComment) {\r\n      dispatch(addComment({ newTextComment, cardId, author: userName }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Background onClick={() => props.setModalActive(false)}>\r\n      <ModalWrapper>\r\n        <Modal onClick={(e) => e.stopPropagation()}>\r\n          <Close–°ross onClick={() => props.setModalActive(false)}>\r\n            <span>\r\n              <ReactSVG src={closeCross} />\r\n            </span>\r\n          </Close–°ross>\r\n          <TitleInput\r\n            onChange={(e) =>\r\n              dispatch(\r\n                onChangeCard({\r\n                  id: props.card.id,\r\n                  filedName: 'title',\r\n                  event: e.target.value,\r\n                })\r\n              )\r\n            }\r\n            value={props.card.title}\r\n            type=\"text\"\r\n          />\r\n          <TitleDesc>\r\n            <div> –≤ –∫–æ–ª–æ–Ω–∫–µ {props.column.title}</div>\r\n            <div>–ê–≤—Ç–æ—Ä: {props.card.author}</div>\r\n          </TitleDesc>\r\n          –û–ø–∏—Å–∞–Ω–∏–µ:\r\n          <DescTextArea\r\n            ref={textRef}\r\n            onChange={(e) => {\r\n              dispatch(\r\n                onChangeCard({\r\n                  id: props.card.id,\r\n                  filedName: 'description',\r\n                  event: e.target.value,\r\n                })\r\n              );\r\n              textRef.current.style.height = '0px';\r\n              textRef.current.style.height = `${textRef.current.scrollHeight}px`;\r\n            }}\r\n            value={props.card.description}\r\n            placeholder=\"–î–æ–±–∞–≤—Ç–µ –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ...\"\r\n          />\r\n          <CommentArea\r\n            value={props.card.newTextComment}\r\n            type=\"text\"\r\n            placeholder=\"–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π\"\r\n            onChange={(e) =>\r\n              dispatch(\r\n                updateNewComment({\r\n                  newTextComment: e.target.value,\r\n                  cardId: props.card.id,\r\n                })\r\n              )\r\n            }\r\n            onKeyPress={(e) =>\r\n              keyPressHandler(e, props.card.newTextComment, props.card.id)\r\n            }\r\n          />\r\n          {props.comments\r\n            .slice(0)\r\n            .reverse()\r\n            .map(\r\n              (comment: Types.Comment) =>\r\n                comment.cardId === props.card.id && (\r\n                  <Comment key={comment.id} comment={comment} />\r\n                )\r\n            )}\r\n        </Modal>\r\n      </ModalWrapper>\r\n    </Background>\r\n  );\r\n};\r\n\r\nconst Background = styled.div`\r\n  position: fixed;\r\n  content: '';\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.4);\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  overflow: hidden;\r\n  overflow-y: auto;\r\n  z-index: 99;\r\n`;\r\nconst ModalWrapper = styled.div`\r\n  flex-shrink: 0;\r\n  flex-grow: 0;\r\n  width: 100%;\r\n  min-height: 100%;\r\n  margin: auto;\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\nconst Modal = styled.div`\r\n  box-sizing: border-box;\r\n  width: 768px;\r\n  margin: 50px 0;\r\n  min-height: 500px;\r\n  background-color: #ebecf0;\r\n  border-radius: 10px;\r\n  position: relative;\r\n  padding: 15px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n`;\r\nconst Close–°ross = styled.div`\r\n  position: absolute;\r\n  content: '';\r\n  top: 0;\r\n  right: 0;\r\n  width: 35px;\r\n  height: 35px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: 0.3s;\r\n  border-radius: 50%;\r\n  margin: 10px 10px 0 0;\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.15);\r\n  }\r\n`;\r\nconst TitleInput = styled.input`\r\n  padding: 5px 5px;\r\n  background: transparent;\r\n  font-size: 18px;\r\n  margin-right: 40px;\r\n  outline: none;\r\n  border-radius: 3px;\r\n  border: 2px solid transparent;\r\n  &:focus {\r\n    background: white;\r\n    border: 2px solid #5c3bfe;\r\n  }\r\n`;\r\nconst TitleDesc = styled.div`\r\n  margin: 0 40px 10px 11px;\r\n  color: #172b4d;\r\n  font-size: 12px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\nconst DescTextArea = styled.textarea`\r\n  background-color: rgba(9, 30, 66, 0.08);\r\n  margin: 10px 0;\r\n  font-size: 14px;\r\n  resize: none;\r\n  border: 2px solid transparent;\r\n  outline: none;\r\n  border-radius: 3px;\r\n  padding: 5px 10px;\r\n  &: focus {\r\n    border: 2px solid #5c3bfe;\r\n    background: white;\r\n  }\r\n`;\r\nconst CommentArea = styled.input`\r\n  padding: 15px 10px;\r\n  margin-bottom: 15px;\r\n  border-radius: 3px;\r\n  outline: none;\r\n  border: none;\r\n  box-shadow: 0 1px 0 rgb(9 30 66 / 25%);\r\n`;\r\n\r\nexport default CardModal;\r\n","export default __webpack_public_path__ + \"static/media/comment.ecf121af.svg\";","import { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport trelloSlice from './trelloSlice';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, trelloSlice);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n});\r\n\r\ntype RootState = ReturnType<typeof store.getState>;\r\n\r\nexport const getColumns = (state: RootState) => state.columns;\r\nexport const getCards = (state: RootState) => state.cards;\r\nexport const getComments = (state: RootState) => state.comments;\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport CardModal from '../modal/CardModal';\r\nimport { ReactSVG } from 'react-svg';\r\nimport closeCross from './../../assets/icons/closeCross.svg';\r\nimport commentIcon from './../../assets/icons/comment.svg';\r\nimport * as Types from '../../types/types';\r\nimport { removeCard } from '../../store/trelloSlice';\r\nimport { getComments } from '../../store/store';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Context from '../../context';\r\n\r\ninterface CardItemProps {\r\n  column: Types.Column;\r\n  card: Types.Card;\r\n}\r\nconst CardItem: React.FC<CardItemProps> = ({ column, card }) => {\r\n  const [modalActive, setModalActive] = React.useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { userName } = React.useContext(Context);\r\n\r\n  const comments = useSelector(getComments);\r\n  const curComments = comments.filter((comment) => {\r\n    return comment.cardId === card.id;\r\n  });\r\n  return (\r\n    <>\r\n      <Card onClick={() => setModalActive(true)}>\r\n        <CardDesc>{card.title}</CardDesc>\r\n        {curComments.length > 0 && (\r\n          <IconContainer title=\"–ö–æ–º–µ–Ω—Ç–∞—Ä–∏–∏\">\r\n            <ReactSVG src={commentIcon} />\r\n            <span>{curComments.length}</span>\r\n          </IconContainer>\r\n        )}\r\n        {(userName === card.author || userName === 'admin') && (\r\n          <Close–°ross onClick={() => dispatch(removeCard(card.id))}>\r\n            <span>\r\n              <ReactSVG src={closeCross} />\r\n            </span>\r\n          </Close–°ross>\r\n        )}\r\n      </Card>\r\n      {modalActive && (\r\n        <CardModal\r\n          comments={comments}\r\n          column={column}\r\n          setModalActive={setModalActive}\r\n          card={card}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst Card = styled.div`\r\n  cursor: pointer;\r\n  position: relative;\r\n  background-color: white;\r\n  padding-right: 30px;\r\n  margin-bottom: 5px;\r\n  border-radius: 3px;\r\n  box-shadow: 0 1px 0 rgb(9 30 66 / 25%);\r\n  min-height: 31px;\r\n  &: hover {\r\n    background-color: rgba(255, 255, 255, 0.3);\r\n  }\r\n`;\r\nconst CardDesc = styled.div`\r\n  box-sizing: border-box;\r\n  overflow: hidden;\r\n  width: 100%;\r\n  padding: 5px 10px;\r\n`;\r\nconst Close–°ross = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  width: 10px;\r\n  height: 21px;\r\n  cursor: pointer;\r\n  padding: 5px 10px;\r\n  &: hover {\r\n    background-color: rgba(0, 0, 0, 0.15);\r\n  }\r\n`;\r\nconst IconContainer = styled.div`\r\n  padding: 0 10px;\r\n  width: 30px;\r\n  height: 30px;\r\n  display: flex;\r\n  align-items: center;\r\n  line-height: 0px;\r\n  span {\r\n    margin-left: 4px;\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nexport default CardItem;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { ReactSVG } from 'react-svg';\r\nimport closeCross from './../../assets/icons/closeCross.svg';\r\nimport CardItem from '../card/CardItem';\r\nimport * as Types from '../../types/types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  addCard,\r\n  updateNewCard,\r\n  setColumnTitle,\r\n} from '../../store/trelloSlice';\r\nimport { getCards } from '../../store/store';\r\nimport Context from '../../context';\r\n\r\ninterface ColumnProps {\r\n  column: Types.Column;\r\n}\r\n\r\nconst Column: React.FC<ColumnProps> = ({ column }) => {\r\n  const [areaInputActive, setAreaInputActive] = React.useState<boolean>(false);\r\n\r\n  const cards = useSelector(getCards);\r\n  const dispatch = useDispatch();\r\n\r\n  const { userName } = React.useContext(Context);\r\n\r\n  const keyPressHandler = (event: React.KeyboardEvent) => {\r\n    if (event.key === 'Enter' && column.newTextCard) {\r\n      dispatch(\r\n        addCard({\r\n          newTextCard: column.newTextCard,\r\n          columnId: column.id,\r\n          author: userName,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ColumnContainer>\r\n      <TitleInput\r\n        value={column.title}\r\n        type=\"text\"\r\n        onChange={(e) =>\r\n          dispatch(setColumnTitle({ event: e.target.value, id: column.id }))\r\n        }\r\n      />\r\n      <CardsWrapper>\r\n        {cards.map(\r\n          (card: Types.Card) =>\r\n            card.columnId === column.id && (\r\n              <CardItem column={column} card={card} key={card.id} />\r\n            )\r\n        )}\r\n      </CardsWrapper>\r\n      {!areaInputActive ? (\r\n        <Button onClick={() => setAreaInputActive(true)}>\r\n          –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É\r\n        </Button>\r\n      ) : (\r\n        <div>\r\n          <AreaInput\r\n            value={column.newTextCard}\r\n            type=\"text\"\r\n            placeholder=\"–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç\"\r\n            onChange={(e) =>\r\n              dispatch(updateNewCard({ event: e.target.value, id: column.id }))\r\n            }\r\n            onKeyPress={keyPressHandler}\r\n          />\r\n          <ButtonContainer>\r\n            <ButtonActive\r\n              onClick={\r\n                column.newTextCard\r\n                  ? () =>\r\n                      dispatch(\r\n                        addCard({\r\n                          newTextCard: column.newTextCard,\r\n                          columnId: column.id,\r\n                          author: userName,\r\n                        })\r\n                      )\r\n                  : undefined\r\n              }\r\n            >\r\n              –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É\r\n            </ButtonActive>\r\n            <CloseAreaInput onClick={() => setAreaInputActive(false)}>\r\n              <ReactSVG src={closeCross} />\r\n            </CloseAreaInput>\r\n          </ButtonContainer>\r\n        </div>\r\n      )}\r\n    </ColumnContainer>\r\n  );\r\n};\r\n\r\nconst ColumnContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 300px;\r\n  background-color: #ebecf0;\r\n  padding: 10px;\r\n  border-radius: 3px;\r\n  max-height: 500px;\r\n  overflow-y: auto;\r\n  margin: 0 auto;\r\n`;\r\nconst TitleInput = styled.input`\r\n  outline: none;\r\n  border: 2px solid transparent;\r\n  background: transparent;\r\n  font-size: 18px;\r\n  margin-bottom: 10px;\r\n  border-radius: 3px;\r\n  padding: 3px;\r\n  &:focus {\r\n    background: white;\r\n    border: 2px solid #5c3bfe;\r\n  }\r\n`;\r\nconst CardsWrapper = styled.div`\r\n  overflow-y: auto;\r\n`;\r\nconst AreaInput = styled.input`\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  padding: 15px 10px;\r\n  border-radius: 3px;\r\n  outline: none;\r\n  border: none;\r\n  box-shadow: 0 1px 0 rgb(9 30 66 / 25%);\r\n`;\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nconst Button = styled.button`\r\n  margin-top: 10px;\r\n  cursor: pointer;\r\n  padding: 5px;\r\n  outline: none;\r\n  border: none;\r\n  opacity: 0.7;\r\n  transition: 0.2s;\r\n  border-radius: 3px;\r\n  &:hover {\r\n    background-color: #c3c4ca63;\r\n    opacity: 1;\r\n  }\r\n`;\r\nconst ButtonActive = styled.button`\r\n  margin-top: 10px;\r\n  cursor: pointer;\r\n  padding: 10px;\r\n  outline: none;\r\n  border: none;\r\n  border-radius: 3px;\r\n  color: white;\r\n  background: #5c3bfe;\r\n  &:hover {\r\n    background: #442bc0;\r\n  }\r\n`;\r\nconst CloseAreaInput = styled.div`\r\n  cursor: pointer;\r\n  width: 20px;\r\n  height: 20px;\r\n  margin: 8px 0 0 10px;\r\n`;\r\n\r\nexport default Column;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Column from '../column/Column';\r\nimport { useSelector } from 'react-redux';\r\nimport { getColumns } from '../../store/store';\r\nimport Context from '../../context';\r\n\r\ninterface BoardProps {\r\n  setJoined(e: boolean): void;\r\n}\r\nconst Board: React.FC<BoardProps> = ({ setJoined }) => {\r\n  const columns = useSelector(getColumns);\r\n\r\n  const { userName } = React.useContext(Context);\r\n\r\n  return (\r\n    <>\r\n      <Profile>\r\n        <CurrentUserName>{userName}</CurrentUserName>\r\n        <ButtunExit onClick={() => setJoined(false)}>–í—ã—Ö–æ–¥</ButtunExit>\r\n      </Profile>\r\n      <BoardContainer>\r\n        {columns.map((column) => (\r\n          <Column key={column.id} column={column} />\r\n        ))}\r\n      </BoardContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nconst BoardContainer = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  margin-top: 50px;\r\n`;\r\nconst Profile = styled.div`\r\n  box-sizing: border-box;\r\n  background-color: #ebecf0;\r\n  margin: 30px 3px 0 auto;\r\n  width: 200px;\r\n  height: 50px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n`;\r\nconst CurrentUserName = styled.div`\r\n  box-sizing: border-box;\r\n  padding: 10px;\r\n  width: 100px;\r\n  overflow: hidden;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\nconst ButtunExit = styled.button`\r\n  cursor: pointer;\r\n  box-sizing: border-box;\r\n  width: 100px;\r\n  height: 100%;\r\n  outline: none;\r\n  border: none;\r\n  border-left: 2px solid #7162bb;\r\n  &:hover {\r\n    box-shadow: 0px 0px 16px 15px rgba(117, 90, 174, 0.2) inset;\r\n  }\r\n`;\r\n\r\nexport default Board;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    html, body {\r\n    background-color: #5c3bfe;\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n    height: 100%;\r\n    overflow-x: auto;\r\n  }\r\n  p {\r\n      margin:0;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from 'react';\r\nimport PopupName from './components/popupUserName/PopupName';\r\nimport Board from './components/board/Board';\r\nimport styled from 'styled-components';\r\nimport GlobalStyle from './globalstyles';\r\n\r\nfunction App() {\r\n  const [joined, setJoined] = React.useState<boolean>(false);\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <Wrapper>\r\n        {!joined ? (\r\n          <PopupName setJoined={setJoined} />\r\n        ) : (\r\n          <Board setJoined={setJoined} />\r\n        )}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  width: 1300px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Context from './context';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/store';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { persistStore } from 'redux-persist';\r\n\r\nlet persistor = persistStore(store);\r\n\r\nfunction Main() {\r\n  const [userName, setUserName] = React.useState<string>('');\r\n\r\n  return (\r\n    <Context.Provider value={{ userName, setUserName }}>\r\n      <React.StrictMode>\r\n        <Provider store={store}>\r\n          <PersistGate persistor={persistor}>\r\n            <App />\r\n          </PersistGate>\r\n        </Provider>\r\n      </React.StrictMode>\r\n    </Context.Provider>\r\n  );\r\n}\r\nReactDOM.render(<Main />, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}